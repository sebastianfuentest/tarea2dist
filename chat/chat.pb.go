// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: chat.proto

package chat

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body         string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Confirmacion int32  `protobuf:"varint,2,opt,name=confirmacion,proto3" json:"confirmacion,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Message) GetConfirmacion() int32 {
	if x != nil {
		return x.Confirmacion
	}
	return 0
}

type BookInf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partes uint64  `protobuf:"varint,1,opt,name=partes,proto3" json:"partes,omitempty"`
	Nombre string  `protobuf:"bytes,2,opt,name=nombre,proto3" json:"nombre,omitempty"`
	Orden  []int32 `protobuf:"varint,3,rep,packed,name=orden,proto3" json:"orden,omitempty"`
}

func (x *BookInf) Reset() {
	*x = BookInf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookInf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookInf) ProtoMessage() {}

func (x *BookInf) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookInf.ProtoReflect.Descriptor instead.
func (*BookInf) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *BookInf) GetPartes() uint64 {
	if x != nil {
		return x.Partes
	}
	return 0
}

func (x *BookInf) GetNombre() string {
	if x != nil {
		return x.Nombre
	}
	return ""
}

func (x *BookInf) GetOrden() []int32 {
	if x != nil {
		return x.Orden
	}
	return nil
}

type Propuesta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nombrelibro string  `protobuf:"bytes,1,opt,name=nombrelibro,proto3" json:"nombrelibro,omitempty"`
	Cnod1       int32   `protobuf:"varint,2,opt,name=cnod1,proto3" json:"cnod1,omitempty"`
	Cnod2       int32   `protobuf:"varint,3,opt,name=cnod2,proto3" json:"cnod2,omitempty"`
	Cnod3       int32   `protobuf:"varint,4,opt,name=cnod3,proto3" json:"cnod3,omitempty"`
	Lnod1       []int32 `protobuf:"varint,5,rep,packed,name=lnod1,proto3" json:"lnod1,omitempty"`
	Lnod2       []int32 `protobuf:"varint,6,rep,packed,name=lnod2,proto3" json:"lnod2,omitempty"`
	Lnod3       []int32 `protobuf:"varint,7,rep,packed,name=lnod3,proto3" json:"lnod3,omitempty"`
	Lnodt       []int32 `protobuf:"varint,8,rep,packed,name=lnodt,proto3" json:"lnodt,omitempty"`
}

func (x *Propuesta) Reset() {
	*x = Propuesta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Propuesta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Propuesta) ProtoMessage() {}

func (x *Propuesta) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Propuesta.ProtoReflect.Descriptor instead.
func (*Propuesta) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Propuesta) GetNombrelibro() string {
	if x != nil {
		return x.Nombrelibro
	}
	return ""
}

func (x *Propuesta) GetCnod1() int32 {
	if x != nil {
		return x.Cnod1
	}
	return 0
}

func (x *Propuesta) GetCnod2() int32 {
	if x != nil {
		return x.Cnod2
	}
	return 0
}

func (x *Propuesta) GetCnod3() int32 {
	if x != nil {
		return x.Cnod3
	}
	return 0
}

func (x *Propuesta) GetLnod1() []int32 {
	if x != nil {
		return x.Lnod1
	}
	return nil
}

func (x *Propuesta) GetLnod2() []int32 {
	if x != nil {
		return x.Lnod2
	}
	return nil
}

func (x *Propuesta) GetLnod3() []int32 {
	if x != nil {
		return x.Lnod3
	}
	return nil
}

func (x *Propuesta) GetLnodt() []int32 {
	if x != nil {
		return x.Lnodt
	}
	return nil
}

type BookChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Pieza int32  `protobuf:"varint,2,opt,name=pieza,proto3" json:"pieza,omitempty"`
}

func (x *BookChunk) Reset() {
	*x = BookChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookChunk) ProtoMessage() {}

func (x *BookChunk) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookChunk.ProtoReflect.Descriptor instead.
func (*BookChunk) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *BookChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BookChunk) GetPieza() int32 {
	if x != nil {
		return x.Pieza
	}
	return 0
}

type ListaChunks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lista []*BookChunk `protobuf:"bytes,1,rep,name=lista,proto3" json:"lista,omitempty"`
	Libro string       `protobuf:"bytes,2,opt,name=libro,proto3" json:"libro,omitempty"`
}

func (x *ListaChunks) Reset() {
	*x = ListaChunks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaChunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaChunks) ProtoMessage() {}

func (x *ListaChunks) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaChunks.ProtoReflect.Descriptor instead.
func (*ListaChunks) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ListaChunks) GetLista() []*BookChunk {
	if x != nil {
		return x.Lista
	}
	return nil
}

func (x *ListaChunks) GetLibro() string {
	if x != nil {
		return x.Libro
	}
	return ""
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x22, 0x41, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x6d, 0x62,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x6c, 0x69,
	0x62, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x6d, 0x62, 0x72,
	0x65, 0x6c, 0x69, 0x62, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x6f, 0x64, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6e, 0x6f, 0x64, 0x31, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6e, 0x6f, 0x64, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6e, 0x6f,
	0x64, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x6f, 0x64, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6e, 0x6f, 0x64, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6e, 0x6f, 0x64,
	0x31, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x6f, 0x64, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x6e, 0x6f, 0x64, 0x32, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x6e, 0x6f, 0x64, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6e, 0x6f, 0x64, 0x33, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x6f, 0x64, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6e,
	0x6f, 0x64, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6e, 0x6f, 0x64, 0x74,
	0x22, 0x35, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x65, 0x7a, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x69, 0x65, 0x7a, 0x61, 0x22, 0x4a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x61,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x62, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69,
	0x62, 0x72, 0x6f, 0x32, 0x6d, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x69, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f,
	0x12, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x6e, 0x65, 0x72,
	0x12, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x1a, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chat_proto_goTypes = []interface{}{
	(*Message)(nil),     // 0: chat.Message
	(*BookInf)(nil),     // 1: chat.BookInf
	(*Propuesta)(nil),   // 2: chat.Propuesta
	(*BookChunk)(nil),   // 3: chat.BookChunk
	(*ListaChunks)(nil), // 4: chat.ListaChunks
}
var file_chat_proto_depIdxs = []int32{
	3, // 0: chat.ListaChunks.lista:type_name -> chat.BookChunk
	4, // 1: chat.ChatService.SubirLibro:input_type -> chat.ListaChunks
	2, // 2: chat.ChatService.Proponer:input_type -> chat.Propuesta
	0, // 3: chat.ChatService.SubirLibro:output_type -> chat.Message
	0, // 4: chat.ChatService.Proponer:output_type -> chat.Message
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookInf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Propuesta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListaChunks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	SubirLibro(ctx context.Context, in *ListaChunks, opts ...grpc.CallOption) (*Message, error)
	//rpc BuscarLibro(BookC) returns (Message);
	Proponer(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SubirLibro(ctx context.Context, in *ListaChunks, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SubirLibro", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Proponer(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/Proponer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	SubirLibro(context.Context, *ListaChunks) (*Message, error)
	//rpc BuscarLibro(BookC) returns (Message);
	Proponer(context.Context, *Propuesta) (*Message, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SubirLibro(context.Context, *ListaChunks) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubirLibro not implemented")
}
func (*UnimplementedChatServiceServer) Proponer(context.Context, *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Proponer not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SubirLibro_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListaChunks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SubirLibro(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SubirLibro",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SubirLibro(ctx, req.(*ListaChunks))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Proponer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Proponer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/Proponer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Proponer(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubirLibro",
			Handler:    _ChatService_SubirLibro_Handler,
		},
		{
			MethodName: "Proponer",
			Handler:    _ChatService_Proponer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
